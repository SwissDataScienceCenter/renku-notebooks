name: CI

on: [push]

env:
  DOCKER_CACHE_PREFIX: "v1"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: poetry
    - name: Install dependencies
      run: |
        poetry install
    - name: Test with pytest
      run: |
        poetry run ruff check
        poetry run pytest tests/unit renku_notebooks

  test-git-proxy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version: '>=1.18.0'
    - name: Test git proxy
      run: |
        cd git-https-proxy
        go test -v

  test-liveness-detector:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.24.2
        manifest-path: ./liveness-detector/pyproject.toml
        cache: true
    - name: Test liveness detector
      run: |
        cd liveness-detector
        pixi run lint-and-fix
        pixi run test

  test-git-services:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: poetry
    - name: Install dependencies
      run: |
        cd git_services
        poetry install
    - name: Test git services
      run: |
        cd git_services
        poetry run ruff check
        poetry run pytest -v tests
  test-secrets-mount:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: poetry
    - name: Install dependencies
      run: |
        cd secrets-mount
        poetry install --with dev
    - name: Test secrets mount
      run: |
        cd secrets-mount
        poetry run ruff check
        poetry run pytest -v tests

  publish-images:
    runs-on: ubuntu-latest
    needs:
    - test
    - test-git-proxy
    - test-git-services
    if: "startsWith(github.ref, 'refs/tags/')"
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: set up environment variables
      run: |
        echo "GIT_USER=Renku Bot" >> $GITHUB_ENV
        echo "GIT_EMAIL=renku@datascience.ch" >> $GITHUB_ENV
    - name: Push images
      uses: SwissDataScienceCenter/renku-actions/publish-chartpress-images@v1.15.0
      env:
        DOCKER_USERNAME: ${{ secrets.RENKU_DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.RENKU_DOCKER_PASSWORD }}
    - name: Update component version
      uses: SwissDataScienceCenter/renku-actions/update-component-version@v1.15.0
      env:
        COMPONENT_NAME: renku-notebooks
        GITHUB_TOKEN: ${{ secrets.RENKUBOT_GITHUB_TOKEN }}
