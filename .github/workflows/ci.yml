name: CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry
        poetry install
    - name: Test with pytest
      run: |
        poetry run pytest tests/unit renku_notebooks

  test-git-proxy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v3
      with:
        go-version: '>=1.18.0'
    - name: Test git proxy
      run: |
        cd git-https-proxy
        go test -v

  test-git-services:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry
        cd git_services
        poetry install
    - name: Test git services
      run: |
        cd git_services
        poetry run pytest -v tests

  test-chart:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Install helm
        uses: azure/setup-helm@v1
      - name: Test chart
        run: |
          helm dep update helm-chart/renku-notebooks
          helm lint helm-chart/renku-notebooks

  publish-chart-tagged:
    runs-on: ubuntu-latest
    needs:
    - test-chart
    - test
    - test-git-proxy
    - test-git-services
    if: "startsWith(github.ref, 'refs/tags/')"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: set up environment variables
      run: |
        echo "GIT_USER=Renku Bot" >> $GITHUB_ENV
        echo "GIT_EMAIL=renku@datascience.ch" >> $GITHUB_ENV
    - name: Push tagged chart and images
      uses: SwissDataScienceCenter/renku-actions/publish-chart@v1.1.0
      env:
        CHART_NAME: renku-notebooks
        GITHUB_TOKEN: ${{ secrets.RENKUBOT_GITHUB_TOKEN }}
        DOCKER_USERNAME: ${{ secrets.RENKU_DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.RENKU_DOCKER_PASSWORD }}
    - name: Wait for chart to get published
      run: sleep 120
    - name: Update component version
      uses: SwissDataScienceCenter/renku-actions/update-component-version@v1.1.0
      env:
        CHART_NAME: renku-notebooks
        GITHUB_TOKEN: ${{ secrets.RENKUBOT_GITHUB_TOKEN }}

  push-latest-image:
    runs-on: ubuntu-latest
    needs: publish-chart-tagged
    if: "startsWith(github.ref, 'refs/tags/')"
    steps:
    - uses: actions/checkout@v2
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Add cache parameters to chartpress.yaml
      run: |
        curl -L https://github.com/mikefarah/yq/releases/download/v4.27.3/yq_linux_amd64 -o yq
        chmod a+x yq
        ./yq -i '.charts[].images[].extraBuildCommandOptions |= ["--cache-from=type=local,src=/tmp/.buildx-cache", "--cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max"]' chartpress.yaml
        rm yq
        cat chartpress.yaml
    - uses: azure/setup-helm@v1
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Push latest image
      env:
        DOCKER_USERNAME: ${{ secrets.RENKU_DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.RENKU_DOCKER_PASSWORD }}
      run: |
        pip install --user poetry
        poetry install
        echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
        helm dep update helm-chart/renku-notebooks
        poetry run chartpress --builder docker-buildx --push --tag latest
    - name: Move cache
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
