# Default values for notebooks.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  useHTTPS: false
  gitlab:
    urlPrefix: /
  renku:
    domain:

# configuration for user session persistent volumes
userSessionPersistentVolumes:
  enabled: false
  storageClass:
  ## To fully disable the limits for emptyDirs make sure that no
  ## ephemeral-storage limits are specified in singleuser.extraResource
  ## in addition to setting the value to false below
  useEmptyDirSizeLimit: true 

gitlab:
  ## specify the GitLab instance URL
  url:
  registry:
    ## Set the default image registry
    host:

## For sending exceptions to Sentry, specify the DSN to use
sentry:
  dsn:
  env:

replicaCount: 1

## Configure autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 50

image:
  repository: renku/renku-notebooks
  tag: 'latest'
  pullPolicy: IfNotPresent

  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistrKeySecretName

# turns on flask debug mode
debug: true

## Default server options - these will be provided to the user in the UI
## Note that requests are also limits, i.e. a user's jupyter kernel
## that exceeds the requested memory limit will be terminated/restarted.
serverOptions:
  defaultUrl:
    order: 1
    displayName: Default Environment
    type: enum
    default: /lab
    ## add /rstudio to the list for R projects
    options: [/lab]
  cpu_request:
    order: 2
    displayName: Number of CPUs
    type: enum
    default: 0.5
    options: [0.5, 1.0]
  mem_request:
    order: 3
    displayName: Amount of Memory
    type: enum
    default: 1G
    options: [1G, 2G]
  disk_request:
    order: 4
    displayName: Amount of storage
    type: enum
    default: "1G"
    options: ["1G"]
    ## set allow_any_value to true to not enforce value checks
    ## arbitrary PV sizes
    # allow_any_value: true
    # value_range:
    #   type: bytes
    #   min: "1G"
    #   max: "100G"
  gpu_request:
    order: 5
    displayName: Number of GPUs
    type: enum
    default: 0
    options: [0]
  lfs_auto_fetch:
    order: 6
    displayName: Automatically fetch LFS data
    type: boolean
    default: false

## Default server option values used to launch a session when
## such values are not provided explicitly in the post request.
## It is mandatory to provide all of these to deploy the helm chart.
## The defaults below do not have to be equal to the default values
## specified in the server options for the UI above but they have to be
## within the available choices or valid ranges.
serverDefaults:
  defaultUrl: /lab
  cpu_request: 0.5
  mem_request: 1G
  disk_request: 1G
  gpu_request: 0
  lfs_auto_fetch: false

## Configuration for the jupyterhub service
jupyterhub:
  rbac:
    enabled: true
  hub:
    ## Secret used for signing JH cookies. Must be explicitly set, otherwise all
    ## users are logged out whenever the hub pod is recreated!
    ## See https://zero-to-jupyterhub.readthedocs.io/en/latest/reference/reference.html#hub-cookiesecret
    cookieSecret: # `openssl rand -hex 32`
    # required when upgrading from 0.9 to 1.x
    db:
      upgrade: true
    image:
      name: renku/jupyterhub-k8s
      tag: 'latest'
    allowNamedServers: true
    services:
      notebooks:
        oauth_no_confirm: true
        url: http://renku-notebooks
        admin: true
        oauth_client_id: service-notebooks
        ## Generate the notebooks service api token with `openssl rand -hex 32`
        # api_token: notebookstoken
      gateway:
        admin: true
        oauth_client_id: gateway
        ## MUST BE IDENTICAL TO gateway.jupyterhub.clientSecret
        # apiToken: Generate with `openssl rand -hex 32`
        # oauth_redirect_uri: https://<renku-domain>/api/auth/jupyterhub/token
    extraEnv:
      DEBUG: '1'
      JUPYTERHUB_SPAWNER_CLASS: spawners.RenkuKubeSpawner
      ## GitLab instance URL
      # GITLAB_URL: http://gitlab.com
    extraConfig:
      renkuConfig: |
        import os

        # Set the log level by value or name.
        c.JupyterHub.log_level = 'DEBUG'

        #: Automatically begin the login process without showing the button.
        c.Authenticator.auto_login = True

        #: Configure the notebook spawner.
        c.JupyterHub.spawner_class = os.getenv('JUPYTERHUB_SPAWNER_CLASS',
                                            'spawners.Spawner')

        c.RenkuKubeSpawner.pod_name_template = 'jupyter-{username}{servername}'

        #: For debugging arguments passed to spawned containers
        c.Spawner.debug = bool(os.getenv('DEBUG', False))

        # Increase pod initialization timeout to 15 minutes
        c.KubeSpawner.start_timeout = 60 * 15

        # Pass extra configuration using config map
        c.KubeSpawner.extra_container_config = {
            'envFrom': [{
                'configMapRef': {
                    'name': 'hub-config-spawner'
                }
            }]
        }

        # prevent redirect to /hub if the server is taking slightly longer to start
        c.JupyterHub.tornado_settings = {
          'slow_spawn_timeout': 1
        }

  singleuser:
    image:
      name: renku/singleuser
      tag: latest
    storage:
      type: none
      extraVolumes:
        - name: notebook-helper-scripts-volume
          configMap:
            name: notebook-helper-scripts
            defaultMode: 0755
      extraVolumeMounts:
        - name: notebook-helper-scripts-volume
          mountPath: /usr/local/bin/pre-stop.sh
          subPath: pre-stop.sh
    defaultUrl: /lab
    extraResource: {}
      # If you do want to specify limits on node's local storage, uncomment the following
      # lines and adjust the capacity as necessary. Set both values to be equal. Don't
      # forget to remove the curly braces after 'extraResource:' above.
      # limits:
      #   ephemeral-storage: 20Gi
      # guarantees:
      #   ephemeral-storage: 20Gi
  ## For sending exceptions to Sentry, specify the DSN to use.
  ## This one is used for renku-python within the running notebook servers.
  #  sentryDsn:

  # The following section disables some of the default JupyterHub
  # optimizations which can interfere with simple setups. See
  # https://zero-to-jupyterhub.readthedocs.io/en/latest/administrator/optimization.html
  # for details.
  scheduling:
    userScheduler:
      enabled: false
    userPlaceholder:
      enabled: false

  # FIXME: bug in prepuller makes helm hang in certain cases. Fixed in 0.7
  # so this should be removed eventually.
  # https://github.com/jupyterhub/zero-to-jupyterhub-k8s/issues/477
  prePuller:
    continuous:
      enabled: false
    hook:
      enabled: false
  auth:
    type: gitlab
    gitlab:
      clientId: jupyterhub
      ## use openssl rand -hex 32 to generate clientSecret
      clientSecret:
      callbackUrl: # Leaving it null forces the default callback url
    ## Store encrypted auth state in the JH db. Key for encryption must
    ## be set explicitly!
    ## See https://zero-to-jupyterhub.readthedocs.io/en/latest/reference/reference.html?highlight=cryptokey#auth-state
    state:
      enabled: true
      cryptoKey: # `openssl rand -hex 32`
  proxy:
    service:
      type: ClusterIP
    https:
      enabled: false
  ## Enable idle user server culling
  cull:
    enabled: true
    timeout: 86400
    every: 60
  ## Enforce scheduling rules
  # scheduling:
      ## On clusters without autoscaling, disable the userPlaceholder and userScheduler
      # userPlaceholder:
      #   enabled: false
      # userScheduler:
      #   enabled: false

      ## Require user pod scheduling on specific nodes
      # userPods:
      #   nodeAffinity:
      #     matchNodePurpose: require

git_clone:
  image:
    name: renku/git-clone
    tag: 'latest'

git_https_proxy:
  image:
    name: renku/git-https-proxy
    tag: 'latest'

service:
  type: ClusterIP
  port: 80

rbac:
  serviceAccountName: default
  create: true

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Restricts egress from the jupyterlab user pods only to DNS (internal and external), external IPs
# and the jupyterhub service pods, setting this to false results in fully unrestricted egress.
restrictUserPodEgress: false

# Specify options to the cronjob that periodically deletes user registry secrets
cull_secrets:
  image:
    # Specify the image for the cronjob that periodically deletes user registry secrets
    repository: renku/cull_secrets
    tag: 'latest'
  schedule: "*/30 * * * *"
  # max_secret_age_hours is the age after which a registry secret
  # that has not corresponding pod can be deleted
  max_secret_age_hours: 0.08
