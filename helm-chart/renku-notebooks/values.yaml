# Default values for notebooks.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  useHTTPS: false

  ## specify the GitLab instance URL
  # gitlab:
  #   url:

replicaCount: 1

image:
  repository: renku/renku-notebooks
  tag: '0.2.0'
  pullPolicy: IfNotPresent

  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistrKeySecretName

## Set these values to correspond to the JupyterHub setup
# jupyterhub_api_token: notebookstoken
# jupyterhub_base_url: /
# jupyterhub_api_url: http://<host>/hub/api

# enable the security context - if using telepresence for development, disable it
securityContext:
  enabled: true

# turns on flask debug mode
debug: true

service:
  type: ClusterIP
  port: 80

rbac:
  serviceAccountName: default
  create: true

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

## Configuration for the jupyterhub service
jupyterhub:
  rbac:
    enabled: true
  hub:
    image:
      name: renku/jupyterhub-k8s
      tag: '0.2.0'
    allowNamedServers: true
    services:
      notebooks:
        url: http://renku-notebooks
        admin: true
        oauth_client_id: service-notebooks
        # need to set the api_token
        # api_token: notebookstoken
    extraEnv:
      DEBUG: 1
      JUPYTERHUB_SPAWNER_CLASS: spawners.RenkuKubeSpawner
      ## GitLab instance URL
      # GITLAB_URL: http://gitlab.com
    extraConfig: |
      import os

      # Set the log level by value or name.
      c.JupyterHub.log_level = 'DEBUG'

      # Enable debug-logging of the single-user server
      c.Spawner.debug = True

      # JupyterHub uses GITLAB_HOST which is a misnomer -- we use GITLAB_URL
      # everywhere so set this mapping here
      os.environ['GITLAB_HOST'] = os.getenv('GITLAB_URL')

      #: Automatically begin the login process without showing the button.
      c.Authenticator.auto_login = True

      #: Configure the notebook spawner.
      c.JupyterHub.spawner_class = os.getenv('JUPYTERHUB_SPAWNER_CLASS',
                                           'spawners.Spawner')

      c.RenkuKubeSpawner.pod_name_template = 'jupyter-{username}{servername}'

      #: Explicitly set the notebook directory because we'll be mounting a host volume to
      #: it.  Most jupyter/docker-stacks *-notebook images run the Notebook server as
      #: user `jovyan`, and set the notebook directory to `/home/jovyan/work`.
      #: We follow the same convention. Note that in most cases this is
      #: overriden in the RenkuKubeSpawner.
      notebook_dir = os.getenv('JUPYTERHUB_NOTEBOOK_DIR', '/home/jovyan/work')
      c.Spawner.notebook_dir = notebook_dir

      #: For debugging arguments passed to spawned containers
      c.Spawner.debug = bool(os.getenv('DEBUG', False))

      # Increase pod initialization timeout to 15 minutes
      c.KubeSpawner.start_timeout = 60 * 15

      # prevent redirect to /hub if the server is taking slightly longer to start
      c.JupyterHub.tornado_settings = {
        'slow_spawn_timeout': 1
      }

  singleuser:
    image:
      name: renku/singleuser
      tag: '0.2.0'
    storage:
      type: none
    defaultUrl: /lab
  # FIXME: bug in prepuller makes helm hang in certain cases. Fixed in 0.7
  # so this should be removed eventually.
  # https://github.com/jupyterhub/zero-to-jupyterhub-k8s/issues/477
  prePuller:
    hook:
      enabled: false
  auth:
    type: gitlab
    gitlab:
      clientId: jupyterhub
      clientSecret: dummy-secret
      callbackUrl: '""' # Forces the default callback url
  proxy:
    service:
      type: ClusterIP
    https:
      enabled: false
  cull:
    enabled: true
    timeout: 86400
    every: 60
