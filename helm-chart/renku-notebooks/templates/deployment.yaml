apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "notebooks.fullname" . }}
  labels:
    app: {{ template "notebooks.name" . }}
    chart: {{ template "notebooks.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ template "notebooks.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "notebooks.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      securityContext:
        runAsUser: 1000
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{ if .Values.userSessionPersistentVolumes.enabled }}
            - name: NOTEBOOKS_SESSION_PVS_ENABLED
              value: {{ .Values.userSessionPersistentVolumes.enabled | quote }}
            - name: NOTEBOOKS_SESSION_PVS_STORAGE_CLASS
              value: {{ .Values.userSessionPersistentVolumes.storageClass | quote}}
            {{ end }}
            - name: NOTEBOOKS_DEFAULT_IMAGE
              value: "{{ .Values.jupyterhub.singleuser.image.name }}:{{ .Values.jupyterhub.singleuser.image.tag }}"
            - name: NOTEBOOKS_SERVER_OPTIONS_DEFAULTS_PATH
              value: /etc/renku-notebooks/server_options/server_defaults.json
            - name: NOTEBOOKS_SERVER_OPTIONS_UI_PATH
              value: /etc/renku-notebooks/server_options/server_options.json
            {{ if eq .Values.debug true }}
            - name: FLASK_DEBUG
              value: "1"
            {{ end }}
            {{ if .Values.jupyterhub.singleuser.defaultUrl }}
            - name: JUPYTERHUB_SINGLEUSER_DEFAULT_URL
              value: {{ .Values.jupyterhub.singleuser.defaultUrl }}
            {{ end }}
            - name: JUPYTERHUB_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "notebooks.fullname" . }}
                  key: jupyterhub-api-token
            - name: JUPYTERHUB_API_URL
              value: {{ template "notebooks.http" . }}://{{ .Values.global.renku.domain }}{{ .Values.jupyterhub.hub.baseUrl }}hub/api
            - name: JUPYTERHUB_SERVICE_PREFIX
              value: {{ .Values.jupyterhub.hub.baseUrl }}services/notebooks/
            - name: JUPYTERHUB_BASE_URL
              value: {{ .Values.jupyterhub.hub.baseUrl }}
            - name: JUPYTERHUB_ORIGIN
              value: {{ template "notebooks.http" . }}://{{ .Values.global.renku.domain }}
            - name: JUPYTERHUB_CLIENT_ID
              value: {{ .Values.jupyterhub.hub.services.notebooks.oauth_client_id }}
            - name: GITLAB_URL
              value: {{  required "A GitLab URL must be specified." .Values.global.gitlab.url }}
            - name: IMAGE_REGISTRY
              value: {{ required "An image registry must be specified." .Values.global.gitlab.registryHost }}
            - name: GIT_CLONE_IMAGE
              value: "{{ .Values.git_clone.image.name }}:{{ .Values.git_clone.image.tag }}"
            - name: GIT_HTTPS_PROXY_IMAGE
              value: "{{ .Values.git_https_proxy.image.name }}:{{ .Values.git_https_proxy.image.tag }}"
            {{ if .Values.sentry.dsn }}
            - name: SENTRY_DSN
              value: {{ .Values.sentry.dsn | quote }}
            {{ end }}
            {{ if .Values.sentry.env }}
            - name: SENTRY_ENV
              value: {{ .Values.sentry.env | quote }}
            {{ end }}

            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: JUPYTERHUB_AUTHENTICATOR
              value: {{ .Values.jupyterhub.auth.type | quote }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: server-options
              mountPath: /etc/renku-notebooks/server_options
          livenessProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: 30
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        - name: server-options
          configMap:
            name: {{ template "notebooks.fullname" . }}-options

      serviceAccountName: {{ if .Values.rbac.create }}"{{ template "notebooks.fullname" . }}"{{ else }}"{{ .Values.rbac.serviceAccountName }}"{{ end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
