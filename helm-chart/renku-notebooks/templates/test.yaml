{{- if .Values.tests.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ template "notebooks.fullname" . }}-integration-test"
  annotations:
    "helm.sh/hook": test
spec:
  serviceAccountName: {{ template "notebooks.fullname" . }}-test
  containers:
{{- range .Values.tests.sessionTypes }}
    - name: {{ printf "%s-integration-test-%s" (include "notebooks.fullname" $) . }}
      image: "{{ $.Values.tests.image.repository }}:{{ $.Values.tests.image.tag }}"
      imagePullPolicy: {{ $.Values.tests.image.pullPolicy }}
      env:
        - name: NB_SESSIONS__INGRESS__HOST
          value: {{ $.Values.sessionIngress.host | quote }}
        - name: NB_SESSIONS__OIDC__CLIENT_ID
          value: {{ $.Values.oidc.clientId | quote }}
        - name: NB_SESSIONS__OIDC__CLIENT_SECRET
          value: {{ $.Values.oidc.clientSecret | quote }}
        - name: NB_SESSIONS__OIDC__TOKEN_URL
          value: {{ $.Values.oidc.tokenUrl | quote }}
        - name: NB_SESSIONS__OIDC__AUTH_URL
          value: {{ $.Values.oidc.authUrl | quote }}
        - name: OIDC_ISSUER
          value: {{ $.Values.tests.oidc_issuer | quote }}
        - name: NB_SESSIONS__OIDC__ALLOW_UNVERIFIED_EMAIL
          value: {{ $.Values.oidc.allowUnverifiedEmail | quote }}
        - name: NB_GIT__URL
          value: {{ $.Values.gitlab.url | quote }}
        - name: NB_GIT__REGISTRY
          value: {{ $.Values.gitlab.registry.host | quote }}
        - name: GITLAB_TOKEN
          value: {{ $.Values.tests.gitlab_token | quote }}
        - name: NOTEBOOKS_BASE_URL
          value: {{ printf "http://%s" (include "notebooks.fullname" $) }}
        - name: NB_SESSIONS__DEFAULT_IMAGE
          value: "{{ $.Values.defaultSessionImage }}"
        - name: NB_SERVER_OPTIONS__DEFAULTS_PATH
          value: /etc/renku-notebooks/server_options/server_defaults.json
        - name: NB_SERVER_OPTIONS__UI_CHOICES_PATH
          value: /etc/renku-notebooks/server_options/server_options.json
        - name: SESSION_TYPE
          value: {{ . | quote }}
        - name: NB_SESSIONS__CULLING__REGISTERED__IDLE_SECONDS
          value: {{ $.Values.culling.idleThresholdSeconds.registered | quote }}
        - name: NB_SESSIONS__CULLING__ANONYMOUS__IDLE_SECONDS
          value: {{ $.Values.culling.idleThresholdSeconds.anonymous | quote }}
        - name: NB_SESSIONS__CULLING__REGISTERED__MAX_AGE_SECONDS
          value: {{ $.Values.culling.maxAgeSecondsThreshold.registered | quote }}
        - name: NB_SESSIONS__CULLING__ANONYMOUS__MAX_AGE_SECONDS
          value: {{ $.Values.culling.maxAgeSecondsThreshold.anonymous | quote }}
        - name: NB_AMALTHEA__GROUP
          value: {{ $.Values.amalthea.crdApiGroup }}
        - name: NB_AMALTHEA__VERSION
          value: {{ $.Values.amalthea.crdApiVersion }}
        - name: NB_AMALTHEA__PLURAL
          value: {{ $.Values.amalthea.crdNames.plural }}
        - name: NB_SESSIONS__INGRESS__ANNOTATIONS
          value: |
            {{- $.Values.sessionIngress.annotations | toYaml | nindent 12 }}
        {{ if $.Values.sessionsNamespace }}
        - name: NB_K8S__SESSIONS_NAMESPACE
          value: {{ $.Values.sessionsNamespace | quote }}
        {{ end }}
        - name: NB_K8S__RENKU_NAMESPACE
          value: {{ $.Release.Namespace | quote }}
        {{- with $.Values.sessionNodeSelector }}
        - name: NB_SESSIONS__NODE_SELECTOR
          value: |
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with $.Values.sessionAffinity }}
        - name: NB_SESSIONS__AFFINITY
          value: |
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with $.Values.sessionTolerations }}
        - name: NB_SESSIONS__TOLERATIONS
          value: |
            {{- toYaml . | nindent 12 }}
        {{- end }}
        - name: NB_SESSIONS__ENFORCE_CPU_LIMITS
          value: {{ $.Values.enforceCPULimits | quote }}
        - name: NB_CLOUD_STORAGE__S3__ENABLED
          value: {{ $.Values.cloudstorage.s3.enabled | quote }}
        - name: NB_CLOUD_STORAGE__S3__READ_ONLY
          value: {{ $.Values.cloudstorage.s3.readOnly | quote }}
        - name: NB_CLOUD_STORAGE__AZURE_BLOB__ENABLED
          value: {{ $.Values.cloudstorage.azureBlob.enabled | quote }}
        - name: NB_CLOUD_STORAGE__AZURE_BLOB__READ_ONLY
          value: {{ $.Values.cloudstorage.azureBlob.readOnly | quote }}
        - name: NB_SESSIONS__TERMINATION_GRACE_PERIOD_SECONDS
          value: {{ $.Values.sessionAutosave.terminationGracePeriodSeconds | quote }}
        - name: NB_SESSIONS__AUTOSAVE_MINIMUM_LFS_FILE_SIZE_BYTES
          value: {{ $.Values.sessionAutosave.minimumLFSFileSizeBytes | quote }}
        - name: NB_VERSION
          value: {{ $.Values.image.tag | quote }}
        - name: NB_SESSIONS__GIT_PROXY__RENKU_CLIENT_ID
          value: renku
        - name: NB_DUMMY_STORES
          value: "true"
        - name: NB_SESSIONS__GIT_PROXY__RENKU_CLIENT_SECRET
          value: {{ $.Values.global.gateway.clientSecret | default "renku-client-secret" | quote }}
        {{ if $.Values.global.keycloak.realm }}
        - name: NB_KEYCLOAK_REALM
          value: {{ $.Values.global.keycloak.realm | quote }}
        {{ end }}
        - name: NB_SESSIONS__SSH__ENABLED
          value: {{ $.Values.ssh.enabled | quote }}
        {{- if not (kindIs "invalid" $.Values.ssh.hostKeySecret) }}
        - name: NB_SESSIONS__SSH__HOST_KEY_SECRET
          value: {{ $.Values.ssh.hostKeySecret | quote }}
        {{- end }}
        - name: NB_CRC_URL
          value: {{ printf "http://%s/api/data" $.Values.global.crc.serviceName }}
      volumeMounts:
        - name: server-options
          mountPath: /etc/renku-notebooks/server_options
{{- end }}
  restartPolicy: Never
  volumes:
    - name: server-options
      configMap:
        name: {{ template "notebooks.fullname" . }}-options
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ template "notebooks.fullname" . }}-test
  labels:
    app: {{ template "notebooks.name" . }}
    chart: {{ template "notebooks.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
      - secrets
    verbs:
      - delete
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - update
      - delete
      - patch
  - apiGroups:
      - {{ .Values.amalthea.crdApiGroup }}
    resources:
      - {{ .Values.amalthea.crdNames.plural }}
    verbs:
      - create
      - update
      - delete
      - patch
      - list
      - get
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs:
      - create
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ template "notebooks.fullname" . }}-test
  labels:
    app: {{ template "notebooks.name" . }}
    chart: {{ template "notebooks.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ template "notebooks.fullname" . }}-test
subjects:
  - kind: ServiceAccount
    name: {{ template "notebooks.fullname" . }}-test
    namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "notebooks.fullname" . }}-test
  labels:
    app: {{ template "notebooks.name" . }}
    chart: {{ template "notebooks.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- end }}
