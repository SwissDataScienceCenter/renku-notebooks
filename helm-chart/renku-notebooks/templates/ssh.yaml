{{- if .Values.ssh.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "notebooks.fullname" . }}-ssh
  labels:
    app: {{ template "notebooks.name" . }}-ssh
    chart: {{ template "notebooks.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  {{- if not .Values.ssh.autoscaling.enabled }}
  replicas: {{ .Values.ssh.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ template "notebooks.name" . }}-ssh
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "notebooks.name" . }}-ssh
        chart: {{ template "notebooks.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ if .Values.rbac.create }}"{{ template "notebooks.fullname" . }}"{{ else }}"{{ .Values.rbac.serviceAccountName }}"{{ end }}
      securityContext:
        fsGroup: 1000
      containers:
        - name: ssh
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
          image: "{{ .Values.ssh.image.repository }}:{{ .Values.ssh.image.tag }}"
          imagePullPolicy: {{ .Values.ssh.image.pullPolicy }}
          ports:
            - name: ssh
              containerPort: 2022
              protocol: TCP
          resources:
            {{- toYaml .Values.ssh.resources | nindent 12 }}
          {{- if not (kindIs "invalid" .Values.ssh.hostKeySecret) }}
          volumeMounts:
            - name: ssh-host-key
              mountPath: /opt/ssh/ssh_host_keys
              readOnly: true
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if not (kindIs "invalid" .Values.ssh.hostKeySecret) }}
      volumes:
        - name: ssh-host-key
          secret: 
            secretName: {{ .Values.ssh.hostKeySecret | quote }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "notebooks.fullname" . }}-ssh
  labels:
    app: {{ template "notebooks.name" . }}-ssh
    chart: {{ template "notebooks.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - name: ssh
      {{- if eq .Values.ssh.service.type "NodePort" }}
      nodePort: {{ .Values.ssh.service.port }}
      {{- end }}
      port: {{ .Values.ssh.service.port }}
      protocol: TCP
      targetPort: ssh
  selector:
    app: {{ template "notebooks.name" . }}-ssh
    release: {{ .Release.Name }}
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ template "notebooks.fullname" . }}-ssh
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ template "notebooks.fullname" . }}-ssh
  minReplicas: {{ .Values.ssh.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.ssh.autoscaling.maxReplicas }}
  targetCPUUtilizationPercentage: {{ .Values.ssh.autoscaling.targetCPUUtilizationPercentage }}
{{- end }}
